<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- load the properties files -->
	<context:property-placeholder location="classpath:sport.properties"/>
	
    <!-- Define your beans here -->
    
	<!-- define the dependency -->
	<bean id = "myFortuneService"
		class = "springcodes.HappyFortuneService">
	</bean>
	
	<!-- baseball coach /////////////////////////////////// -->
	<bean id="baseCoach"
		class = "springcodes.BaseballCoach">
		<!-- set up constructor injection by giving id of myFortuneService as ref-->
		<constructor-arg ref = "myFortuneService" />
	</bean>
	
	<!-- Track coach ////////////////////////////////////// -->
	<bean id="trackCoach"
		class = "springcodes.TrackCoach">
		<!-- set up constructor injection -->
		<constructor-arg ref = "myFortuneService" />
	</bean>

	<!-- Cricket Coach //////////////////////////////////// -->
	<bean id="myCricketCoach"
		class = "springcodes.CricketCoach" lazy-init="true">
		<!-- set up setter injection -->
		<property name="fortuneService" ref="myFortuneService"></property>
		
		<!-- email address and team injector -->
		<!-- you can even replace value with literal value of email address and team 
		i.e. detained8@gmail.com and barcelona-->
		<!-- in below code we make use of sport.properties file which is referenced above -->
		
		<property name="emailAddress" value ="${foo.email}"></property>
		<property name="team" value="${foo.team}"></property>	
	</bean>
		
	
</beans>
